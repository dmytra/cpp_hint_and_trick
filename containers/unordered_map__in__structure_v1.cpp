#include <iostream>
#include <map>

// https://t.me/easy_c_plus/230
/*

–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ –±—ã —Ö—Ä–∞–Ω–∏—Ç—å —Å–≤–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ unordered_map

–ß—Ç–æ–±—ã —Ö—Ä–∞–Ω–∏—Ç—å —Å–≤–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ std::map, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤. –í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ std::map ‚Äî —ç—Ç–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–µ—Ä–µ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–ª—è —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ü–æ—ç—Ç–æ–º—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.

‚ûï –£–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ—Å—Ç—å: std::map —Ö—Ä–∞–Ω–∏—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞, –≤—Å—Ç–∞–≤–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç—å—é.

‚ûï –ì–∏–±–∫–æ—Å—Ç—å: –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–µ–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –º–µ–∂–¥—É –¥–∞–Ω–Ω—ã–º–∏.

ü§î –ö–∞–∫ —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?

–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ std::map, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:

‚ûï –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
   */

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
struct Point {
    int x, y;

    // –û–ø–µ—Ä–∞—Ç–æ—Ä —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    bool operator<(const Point& other) const {
        // –°–Ω–∞—á–∞–ª–∞ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ x, –∑–∞—Ç–µ–º –ø–æ y
        return (x < other.x) || (x == other.x && y < other.y);
    }
};

int main() {
    // –°–æ–∑–¥–∞–Ω–∏–µ map —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞
    std::map<Point, std::string> myMap;

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    myMap[{1, 2}] = "Point A";
    myMap[{3, 4}] = "Point B";

    // –î–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º
    std::cout << "Point (1, 2): " << myMap[{1, 2}] << std::endl;
    std::cout << "Point (3, 4): " << myMap[{3, 4}] << std::endl;

    return 0;
}

