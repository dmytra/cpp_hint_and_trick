// https://t.me/easy_c_plus/208
// https://t.me/easy_c_plus/211
/*
 Нормально ли выбрасывание исключения из конструктора ?
 
 Выбрасывание исключения из конструктора является стандартным и эффективным способом обработки ошибок при создании объектов. Этот механизм обеспечивает безопасное создание объектов и помогает поддерживать корректность программы, гарантируя, что объекты в невалидном состоянии не будут созданы.


 Выбрасывание исключения из конструктора является не только нормальным, но и важным механизмом для управления ошибками при создании объектов. Это особенно актуально в ситуациях, когда в процессе инициализации объекта происходит что-то, что делает дальнейшее его существование неправомерным или некорректным. Исключения предоставляют способ грациозно обработать ошибку и предотвратить создание объекта, находящегося в невалидном состоянии.
 
*/

#include <iostream>
#include <stdexcept> // для std::runtime_error

class MyClass {
public:
    MyClass(int value) {
        if (value <= 0) {
            throw std::runtime_error("Значение должно быть больше нуля.");
        }
        // Инициализация продолжается, если значение корректно.
    }
};

class MyClass2 {
public:
    MyClass2(int value) {
        if (value <= 0) {
            throw std::invalid_argument("Значение должно быть больше 0");
        }
        // Инициализация продолжается, если значение корректно
        this->value = value;
    }

private:
    int value;
};

int main() {
    try {
        MyClass obj(0);
    } catch (const std::exception& e) {
        std::cerr << "Исключение: " << e.what() << std::endl;
    }
    
    
    try {
        MyClass2 obj(-1);
    } catch (const std::invalid_argument& e) {
        std::cout << "Ошибка при создании объекта MyClass2: " << e.what() << std::endl;
    }
    
    return 0;
}


